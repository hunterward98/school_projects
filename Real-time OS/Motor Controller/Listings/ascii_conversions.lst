


ARM Macro Assembler    Page 1 


    1 00000000         ; Functions that convert to and from ASCII
    2 00000000         ; John Tadrous
    3 00000000         ; September 27, 2020
    4 00000000         
    5 00000000 00000004 
                       Size_Cal
                               EQU              4           ;              ; 4 
                                                            digits per number
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2 
                                                            ;
    8 00000000                 EXPORT           Hex2ASCII
    9 00000000                 EXPORT           ASCII2Hex
   10 00000000         
   11 00000000         ; Subroutine HEX2ASCII- Converts a hex value in R1 into 
                       an ASCII string of BCD characters in location
   12 00000000         ; pointed to by R0
   13 00000000         Hex2ASCII
   14 00000000 B53F            PUSH             {R0-R5, LR}
   15 00000002 F04F 0220       MOV              R2, #0x20   ; blanking the cont
                                                            ent before writing 
                                                            the string the BCD 
                                                            digits
   16 00000006 F04F 0304       MOV              R3, #Size_Cal
   17 0000000A         Blank_digit
   18 0000000A F1A3 0301       SUB              R3, #1
   19 0000000E 54C2            STRB             R2, [R0, R3] ; writing a blank
   20 00000010 2B00            CMP              R3, #0x00
   21 00000012 D8FA            BHI              Blank_digit
   22 00000014 7103            STRB             R3, [R0, #Size_Cal] ; here R3 i
                                                            s NULL so we simply
                                                             NULL the last byte
                                                             of the string
   23 00000016 F04F 0304       MOV              R3, #Size_Cal
   24 0000001A         Attach_digit
   25 0000001A 460A            MOV              R2, R1      ; quotient in R2
   26 0000001C 2A0A            CMP              R2, #10
   27 0000001E D30F            BLO              Last_digit
   28 00000020 F04F 040A       MOV              R4, #10     ; R4 is temporarily
                                                             used to hold #10
   29 00000024 FBB2 F1F4       UDIV             R1, R2, R4  ; R1=floor(R2/10)
   30 00000028 FB01 F504       MUL              R5, R1, R4
   31 0000002C EBA2 0405       SUB              R4, R2, R5  ; remainder in R4
   32 00000030 F104 0430       ADD              R4, #0x30   ; ASCII
   33 00000034 F1A3 0301       SUB              R3, #1
   34 00000038 54C4            STRB             R4, [R0, R3] ; store the ASCII 
                                                            code of BCD digit
   35 0000003A 2B00            CMP              R3, #0x00
   36 0000003C D005            BEQ              End_Hex2ASCII ; typically this 
                                                            will not be execute
                                                            d unless we have an
                                                             overflow (c.f. Lab
                                                            7)
   37 0000003E E7EC            B                Attach_digit
   38 00000040         Last_digit                           ; here we store the
                                                             quotient as the mo
                                                            st significant BCD 
                                                            digit



ARM Macro Assembler    Page 2 


   39 00000040 F102 0230       ADD              R2, #0x30
   40 00000044 F1A3 0301       SUB              R3, #1
   41 00000048 54C2            STRB             R2, [R0, R3]
   42 0000004A         End_Hex2ASCII
   43 0000004A E8BD 403F       POP              {R0-R5, LR}
   44 0000004E 4770            BX               LR
   45 00000050         
   46 00000050         
   47 00000050         ; Subroutine ASCII2HEX- Converts a string of BCD charact
                       ers pointed to by R0
   48 00000050         ; to a hex equivalent value in R0
   49 00000050         ASCII2Hex
   50 00000050 B506            PUSH             {R1,R2, LR}
   51 00000052 F04F 0200       MOV              R2, #0x00   ; initialize R2
   52 00000056         ASCII2HEX_Again
   53 00000056 F04F 0100       MOV              R1, #0x00   ; initialize R1
   54 0000005A 7801            LDRB             R1, [R0]    ; R1 <- digit in th
                                                            e string
   55 0000005C F100 0001       ADD              R0, #1      ; increment base ad
                                                            dress
   56 00000060 2900            CMP              R1, #0x00
   57 00000062 D00E            BEQ              End_ASCII2HEX ;
   58 00000064 F1A1 0130       SUB              R1, #0x30   ; convert to decima
                                                            l digit
   59 00000068 440A            ADD              R2, R1      ; R2 <-- R2 + R1
   60 0000006A 4611            MOV              R1, R2      ; R1 <-- R2
   61 0000006C F04F 0300       MOV              R3, #0x00
   62 00000070 7803            LDRB             R3, [R0]
   63 00000072 2B00            CMP              R3, #0x00   ; check the next di
                                                            git in the string b
                                                            efore multiplying b
                                                            y 10
   64 00000074 D005            BEQ              End_ASCII2HEX ;
   65 00000076 F04F 020A       MOV              R2, #10     ; R2 <- 10
   66 0000007A FB01 F102       MUL              R1, R2      ; R1=10*R1
   67 0000007E 460A            MOV              R2, R1      ; copy the result i
                                                            n R2
   68 00000080 E7E9            B                ASCII2HEX_Again
   69 00000082         End_ASCII2HEX
   70 00000082 4608            MOV              R0, R1
   71 00000084 E8BD 4006       POP              {R1,R2, LR}
   72 00000088 4770            BX               LR
   73 0000008A         
   74 0000008A                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\ascii_conversions.d -o.\objects\ascii_conversions.o -I.\
RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Kei
l_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SE
TA 1" --predefine="__UVISION_VERSION SETA 523" --predefine="_RTE_ SETA 1" --pre
define="TM4C123GH6PM SETA 1" --list=.\listings\ascii_conversions.lst ASCII_Conv
ersions.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file ASCII_Conversions.s
   Uses
      None
Comment: .text unused
ASCII2HEX_Again 00000056

Symbol: ASCII2HEX_Again
   Definitions
      At line 52 in file ASCII_Conversions.s
   Uses
      At line 68 in file ASCII_Conversions.s
Comment: ASCII2HEX_Again used once
ASCII2Hex 00000050

Symbol: ASCII2Hex
   Definitions
      At line 49 in file ASCII_Conversions.s
   Uses
      At line 9 in file ASCII_Conversions.s
Comment: ASCII2Hex used once
Attach_digit 0000001A

Symbol: Attach_digit
   Definitions
      At line 24 in file ASCII_Conversions.s
   Uses
      At line 37 in file ASCII_Conversions.s
Comment: Attach_digit used once
Blank_digit 0000000A

Symbol: Blank_digit
   Definitions
      At line 17 in file ASCII_Conversions.s
   Uses
      At line 21 in file ASCII_Conversions.s
Comment: Blank_digit used once
End_ASCII2HEX 00000082

Symbol: End_ASCII2HEX
   Definitions
      At line 69 in file ASCII_Conversions.s
   Uses
      At line 57 in file ASCII_Conversions.s
      At line 64 in file ASCII_Conversions.s

End_Hex2ASCII 0000004A

Symbol: End_Hex2ASCII
   Definitions
      At line 42 in file ASCII_Conversions.s
   Uses
      At line 36 in file ASCII_Conversions.s
Comment: End_Hex2ASCII used once
Hex2ASCII 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Hex2ASCII
   Definitions
      At line 13 in file ASCII_Conversions.s
   Uses
      At line 8 in file ASCII_Conversions.s
Comment: Hex2ASCII used once
Last_digit 00000040

Symbol: Last_digit
   Definitions
      At line 38 in file ASCII_Conversions.s
   Uses
      At line 27 in file ASCII_Conversions.s
Comment: Last_digit used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Size_Cal 00000004

Symbol: Size_Cal
   Definitions
      At line 5 in file ASCII_Conversions.s
   Uses
      At line 16 in file ASCII_Conversions.s
      At line 22 in file ASCII_Conversions.s
      At line 23 in file ASCII_Conversions.s

1 symbol
344 symbols in table
